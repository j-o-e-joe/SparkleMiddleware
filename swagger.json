{
  "swagger": "2.0",
  "info": {
    "description": "This is a middleware server for interfacing our iPad client and WebUI to our data store and AI server processes.",
    "version": "0.0.1",
    "title": "GIA Auto Plot"
  },
  "host": "gia-autoplot.mybluemix.net",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user name from the request.user object returned by AppID",
        "description": "",
        "operationId": "user",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/runningtraining": {
      "post": {
        "tags": [
          "runningtraining"
        ],
        "summary": "Start a new training session.",
        "description": "",
        "operationId": "runningtraining",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/setitemcontents": {
      "post": {
        "tags": [
          "setitemcontents"
        ],
        "summary": "Upload a Zip containing 3 Cisgo Images. A Crown, B High Exposure, B Low Exposure",
        "description": "",
        "operationId": "setitemcontents",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": ""
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Item not found"
          }
        }
      }
    },
    "/api/deleteitem": {
      "delete": {
        "tags": [
          "deleteitem"
        ],
        "summary": "Delete an object from the S3 data storage",
        "description": "",
        "operationId": "deleteitem",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": ""
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Item not found"
          }
        }
      }
    },
    "/api/deletedbitem": {
      "delete": {
        "tags": [
          "deletedbitem"
        ],
        "summary": "Delete an item from the Cloudant database",
        "description": "",
        "operationId": "deletedbitem",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": ""
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Item not found"
          }
        }
      }
    },
    "/api/getcisgoitems": {
      "get": {
        "tags": [
          "getcisgoitems"
        ],
        "summary": "Get all Cisgo items matching a control number.",
        "description": "",
        "operationId": "getcisgoitems",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Cisgo"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Cisgo item not found"
          }
        }
      }
    },
    "/api/getplotitems": {
      "get": {
        "tags": [
          "getplotitems"
        ],
        "summary": "Get all Plot items matching a control number.",
        "description": "",
        "operationId": "getplotitems",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Plot"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Plot not found"
          }
        }
      }
    },
    "/api/getgradeitems": {
      "get": {
        "tags": [
          "getgradeitems"
        ],
        "summary": "Get all Grade items matching a control number.",
        "description": "",
        "operationId": "getgradeitems",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Grade"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Grade not found"
          }
        }
      }
    },
    "/api/getsparkletableitems": {
      "get": {
        "tags": [
          "getsparkletableitems"
        ],
        "summary": "Get all Sparkle Table items matching a control number.",
        "description": "",
        "operationId": "getsparkletableitems",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Sparkle%20Table%20Image%20Processing"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Item not found"
          }
        }
      }
    },
    "/api/getreportitems": {
      "get": {
        "tags": [
          "getreportitems"
        ],
        "summary": "Get all GIA Report items matching a control number.",
        "description": "",
        "operationId": "getreportitems",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GIA%20Provided%20Data"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Report not found"
          }
        }
      }
    },
    "/api/getobject": {
      "get": {
        "tags": [
          "getobject"
        ],
        "summary": "Get all object from S3.",
        "description": "",
        "operationId": "getobject",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": ""
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Object not found"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "giaautoplot_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://us-south.appid.cloud.ibm.com/oauth/v4/153281e8-9e03-40ec-93a1-0e5b2be7ef68",
      "flow": "implicit",
      "scopes": {
        "write:api": "modify",
        "read:api": "read"
      }
    },
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Cisgo": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_rev": {
          "type": "string"
        },
        "cisgotimestamp": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "filepath": {
          "type": "string"
        },
        "controlnumber": {
          "type": "string"
        },
        "cisgousername": {
          "type": "string"
        },
        "bucketname": {
          "type": "string"
        },
        "sparkleprocessed": {
          "type": "string"
        },
        "cisgodevice": {
          "type": "string"
        }
      }
    },
    "GIA Provided Data": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_rev": {
          "type": "string"
        },
        "cut": {
          "type": "string"
        },
        "fluorescence": {
          "type": "string"
        },
        "weight": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "controlnumber": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "training": {
          "type": "string"
        },
        "symmetry": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "report": {
          "type": "string"
        },
        "polish": {
          "type": "string"
        },
        "clarity": {
          "type": "string"
        }
      }
    },
    "Sparkle Table Image Processing": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_rev": {
          "type": "string"
        },
        "cisgotimestamp": {
          "type": "string"
        },
        "bucketname": {
          "type": "string"
        },
        "filepath": {
          "type": "string"
        },
        "sparklemodel": {
          "type": "string"
        },
        "controlnumber": {
          "type": "string"
        },
        "sparkletabletimestamp": {
          "type": "string"
        }
      }
    },
    "Plot": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_rev": {
          "type": "string"
        },
        "plotusername": {
          "type": "string"
        },
        "cisgotimestamp": {
          "type": "string"
        },
        "sparklemodel": {
          "type": "string"
        },
        "filepath": {
          "type": "string"
        },
        "sparklegradeprocessed": {
          "type": "string"
        },
        "plotdevice": {
          "type": "string"
        },
        "controlnumber": {
          "type": "string"
        },
        "plottimestamp": {
          "type": "string"
        },
        "bucketname": {
          "type": "string"
        },
        "sparkletabletimestamp": {
          "type": "string"
        }
      }
    },
    "Grade": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_rev": {
          "type": "string"
        },
        "vs1": {
          "type": "string"
        },
        "vs2": {
          "type": "string"
        },
        "gia_grade": {
          "type": "string"
        },
        "cisgotimestamp": {
          "type": "string"
        },
        "i1": {
          "type": "string"
        },
        "i3": {
          "type": "string"
        },
        "i2": {
          "type": "string"
        },
        "controlnumber": {
          "type": "string"
        },
        "plottimestamp": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "si2": {
          "type": "string"
        },
        "si1": {
          "type": "string"
        },
        "high_clarity": {
          "type": "string"
        },
        "gradetimestap": {
          "type": "string"
        },
        "continuous_grade": {
          "type": "string"
        },
        "sparkletabletimestamp": {
          "type": "string"
        }
      }
    },
    "Training": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "_rev": {
          "type": "string"
        },
        "bucketname": {
          "type": "string"
        },
        "testfile": {
          "type": "string"
        },
        "trainingfile": {
          "type": "string"
        },
        "trainingtimestamp": {
          "type": "string"
        }
      }
    }
  }
}